// Generated by CoffeeScript 1.6.3
(function() {
  "use strict";
  var APPID, YOLP, failGetLocation, getLocation, jsonp, loadlib, reverseGeoCode, successGetLocation;

  YOLP = 'http://reverse.search.olp.yahooapis.jp/OpenLocalPlatform/V1/reverseGeoCoder';

  APPID = 'dj0zaiZpPWowM3hJMjNhNEVhSSZzPWNvbnN1bWVyc2VjcmV0Jng9ODM-';

  loadlib = function(path) {
    var script;
    script = document.createElement('script');
    script.setAttribute('type', 'text/javascript');
    script.setAttribute('src', path);
    return document.head.appendChild(script);
  };

  jsonp = function(url, data, callback) {
    var k, path, v;
    path = [url, '?'];
    for (k in data) {
      v = data[k];
      path = Array.prototype.concat(path, ["" + k + "=" + v, '&']);
    }
    path = Array.prototype.concat(path, "callback=" + callback + "&output=json");
    console.log("calling jsonp. url: " + (path.join('')));
    return loadlib(path.join(''));
  };

  getLocation = function(success, fail) {
    return navigator.geolocation.getCurrentPosition(success, fail, {
      enableHighAccuracy: true,
      timeout: 5000
    });
  };

  successGetLocation = function(position) {
    console.log("lat: " + position.coords.latitude + ", lon: " + position.coords.longitude + ", accuracy: " + position.coords.accuracy);
    return reverseGeoCode(position.coords.latitude, position.coords.longitude, position.coords.accuracy);
  };

  failGetLocation = function(error) {
    console.log('Error.');
    return console.log(error.message);
  };

  reverseGeoCode = function(lat, lon, accuracy) {
    return jsonp(YOLP, {
      appid: APPID,
      lat: lat,
      lon: lon
    }, 'successReverseGeocode');
  };

  this.successReverseGeocode = function(result) {
    return document.body.innerHTML = JSON.stringify(result);
  };

  $(function() {
    return getLocation(successGetLocation, failGetLocation);
  });

}).call(this);
